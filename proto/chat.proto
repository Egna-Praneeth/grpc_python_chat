syntax = "proto3";

package grpc;

message Empty {}

// I called it Note because message Message sounds complicated
message UserName{
    string username = 1;
}

message UsernamePassword {
    string username = 1;
    string password = 2;
}
message Note {
    string name = 1;
    string message = 2;
    string dest = 3;
}

message UsersList {
    repeated string users = 4;
}

message ReturnCode {
    int32 return_code = 1;
}

// to notify client with some custom status, etc
message StringResponse{
    string message = 1;
}

message FileMetadata {
  string senderName = 1;
  string dest = 2;
  string fileName = 3;
  string fileExtension = 4; // ex: '.jpg'
//   string FilePackets = 5; // filesize(KB)/1024 
} 

// oneof: like union
message FtpUploadRequest {
  oneof options {
    FileMetadata fileMetadata = 1;
    bytes chunkOfFile = 2;
  }
}

// downloading stream of file thro
message FtpResponse {
  bytes chunkReply = 1;
  string progressReply = 2;
}

message Group {
    string GroupName = 1;
    repeated string users = 2;
    string username = 3;
}
message BoolResponse{
    bool response = 1;
}

service ChatServer {
    rpc CheckUniqueUser(UserName) returns (BoolResponse);
    rpc Register(UsernamePassword) returns (Empty);
    rpc CheckUserExists(UsernamePassword) returns (BoolResponse);

    rpc ChatStream (UserName) returns (stream Note);
    rpc SendNote (Note) returns (Empty);

    rpc JoinServer(UserName) returns (Empty);
    rpc getListOfUsers(UserName) returns (UsersList);
    rpc getListOfOnlyUsers(Empty) returns (UsersList);
    rpc CreateGroup(Group) returns (Empty);
    rpc FtpUploadFile(stream FtpUploadRequest) returns (stream StringResponse) {} // stream respnse to recive status of upload
    rpc FtpDownloadFile(FileMetadata) returns (stream FtpResponse) {} // could be just username? and send his files?
}